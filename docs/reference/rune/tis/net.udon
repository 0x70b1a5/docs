:-  :~  navhome/'/docs/'
        next/'true'
        sort/'10'
        title/'=/ "tisnet"'
    ==
;>

# `=/ "tisnet"`

`[%tsfs p=skin q=hoon r=hoon]`: combine a named noun with the subject, possibly with type annotation.

## Expands to

*if `p` is a name*, (e.g. `a`):

```
=+(^=(p q) r)
```

*if `p` is a name with a type* (e.g., `a=@`):

```
=+(^-(p q) r)
```

### Compiler macro

```
?@  p
  =+  p=q
  r
=+  ^-($=(p.p q.p) q)
r
```

## Syntax

Regular: *3-fixed*.

## Discussion

`p` can be either a name or a name=type.  If it's just a name,
`=/` ("tisnet") "declares a type-inferred variable."  If it has a type, `=/`
"declares a type-checked variable."

## Examples

```
~zod:dojo> =foo  |=  a=@
                 =/  b  1
                 =/  c=@  2
                 :(add a b c)
~zod:dojo> (foo 5)
8
```
