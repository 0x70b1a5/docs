:-  :~  navhome/'/docs/'
        next/'true'
        sort/'6'
        title/'|. "bardot"'
    ==
;>

# `|. "bardot"`

Produce a trap (a core with one arm `$`).

## Syntax

Regular:

```
|.  a=hoon
```

AST:

```
[%brdt p=hoon]
```

Semantics:

A `|.` expression produces a core with a single arm, `$`.  The core isn't explicitly given a sample.  `a` is a Hoon expression that defines the computation of the `$` arm.

The payload of the core is the subject of the `|.` expression.

## Expands to

```
|%  ++  $  a
--
```

## Discussion

A trap is generally used to defer a computation.

## Examples

A trivial trap:

```
~zod:dojo> =foo |.(42)

~zod:dojo> $:foo
42

~zod:dojo> (foo)
42
```

A more interesting trap:

```
~zod:dojo> =foo  =/  reps  10
                 =/  step  0
                 =/  outp  0
                 |.
                 ?:  =(step reps)
                   outp
                 $(outp (add outp 2), step +(step))
~zod:dojo> (foo)
20
```

Note that we can use `$()` to recurse back into the
trap, since it's a core with an `$` arm.

> `$(...)` expands to `%=($ ...)` (["centis"](../../cen/tis)).
